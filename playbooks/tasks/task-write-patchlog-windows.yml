# - name: Write Windows patch log
#   ansible.builtin.shell: |
#     cat <<EOF >> /mnt/protokolle/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/Serverpatch/Fertig/Updates-{{ groupe_name }}-Generated.txt
#     {{ inventory_hostname }} ({{ ansible_facts.os_name }}):
#     Updates({{ update_result.found_update_count }}):
#     {% for update in update_result.updates %}
#     - {{ update_result.updates[update].title }}
#     {% endfor %}
    
#     Done: Neustart von {{ reboot_start.stdout }} bis {{ reboot_end.stdout }} = OK
#     ToDo: Festplattenspeicher {{ disk_space_gb }} GB =
#     {{ windows_verson_check }}
#     ToDo: WSUS Status prüfen =
#     ToDo: Logs > Anwendung = 
#     ToDo: Logs > System = 
#     ToDo: Abmelden = 
#     EOF
#   delegate_to: localhost
#   args:
#     executable: /bin/bash

- name: Write Windows patch log with blockinfile
  ansible.builtin.blockinfile:
    path: "/mnt/protokolle/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/Serverpatch/Fertig/Updates-{{ groupe_name }}-Generated.txt"
    block: |
      ###########################################################################################################################

      {{ inventory_hostname }} ({{ ansible_facts.os_name }}):
      Updates({{ update_result.found_update_count }}):
      {% for update in update_result.updates %}
      - {{ update_result.updates[update].title }}
      {% endfor %}
      
      Done: Neustart von {{ reboot_start.stdout }} bis {{ reboot_end.stdout }} = OK
      ToDo: Festplattenspeicher {{ disk_space_gb }} GB =
      {{ windows_verson_check }}
      ToDo: WSUS Status prüfen =
      ToDo: Logs > Anwendung = 
      ToDo: Logs > System = 
      ToDo: Abmelden = 
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR {{ inventory_hostname }}"
    create: yes
    insertafter: EOF
    state: present
  delegate_to: localhost
    