---
- name: Patch Windows Host
  hosts: "{{ target_hosts }}"
  become: false
  gather_facts: true

  vars_prompt:
  - name: ansible_user 
    prompt: "Admin (bsp. adminjs@gutingia.local)"
    private: false
  - name: ansible_password
    prompt: "Passwort"
    private: true
  
  vars:
    vcenter_hostname: vcenter1.gutingia.local
    datacenter_name: myLife

  tasks:
  - name: Set groupname
    set_fact:
      groupe_name: "{{ target_hosts.split('_')[1] }}"

  - name: Versuche, Informationen Ã¼ber die VM zu erhalten
    community.vmware.vmware_guest_info:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: no
      datacenter: "{{ datacenter_name }}"
      folder: "/{{ datacenter_name }}/vm/"
      name: "{{ inventory_hostname }}"
    register: vm_info
    delegate_to: localhost
    ignore_errors: yes

  - name:
    debug:
      msg: "{{ vm_info }}" # not required. The customized message that is printed. If omitted, prints a generic message.

  - name: Mache etwas, wenn die VM existiert
    debug:
      msg: "VM {{ inventory_hostname }} existiert."
    when: vm_info.instance is defined