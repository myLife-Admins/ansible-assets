
---
# - name: Erstelle Snapshots
#   hosts: localhost
#   become: false
#   gather_facts: true
  
#   vars_prompt:
#   - name: ansible_user 
#     prompt: "Admin (bsp. admin@gutingia.local)"
#     private: false
#   - name: ansible_password
#     prompt: "Passwort"
#     private: true

#   vars:
#     vcenter_hostname: vcenter1.gutingia.local
#     datacenter_name: myLife

#   tasks:
#   - name: Erstelle Snapshots f端r jede VM
#     community.vmware.vmware_guest_snapshot:
#       hostname: "{{ vcenter_hostname }}"
#       username: "{{ ansible_user }}"
#       password: "{{ ansible_password }}"
#       validate_certs: no
#       datacenter: "{{ datacenter_name }}"  # Ersetze durch deinen Datacenter-Namen
#       folder: "/{{ datacenter_name }}/vm/"
#       name: "{{ item }}"
#       state: present
#       memory_dump: yes
#       snapshot_name: "Update-{{ ansible_date_time.date }}"
#       description: "Automatisch erstellter Snapshot vor Update"
#     delegate_to: localhost
#     throttle: 2
#     loop: "{{ groups['windows_test'] }}"

- name: Patch Windows Host
  hosts: windows_test
  become: false
  gather_facts: true

  vars_prompt:
  - name: ansible_user 
    prompt: "Admin (bsp. adminjs)"
    private: false
  - name: ansible_password
    prompt: "Passwort"
    private: true
  
  tasks:
  - name: Get current year and month
    set_fact:
      current_year: "{{ ansible_date_time.year }}"
      current_month: "{{ '%02d'|format(ansible_date_time.month|int) }}"
      current_time: "{{ ansible_date_time.iso8601 }}"
    delegate_to: localhost

  - name: Create directories for current year and month
    file:
      path: "/mnt/protokolle/{{ current_year }}/{{ current_month }}"
      state: directory
    delegate_to: localhost

  - name: Erhalte die Windows-Version
    ansible.windows.win_shell: |
      Get-ComputerInfo | Select-Object WindowsProductName, WindowsVersion, OsHardwareAbstractionLayer
    register: windows_version_info

  - name: Suche nach verf端gbaren Updates
    ansible.windows.win_updates:
      state: searched
    register: update_result

  - name: Zeige verf端gbare Updates
    lineinfile:
      create: yes
      path: "/mnt/protokolle/{{ current_year }}/{{ current_month }}/Serverpatch/Fertig/Linux/Updates-{{ inventory_hostname }}-Generated.txt"
      line: |
        {{ inventory_hostname }}({{ windows_version_info }}):
        {% for update in update_result.updates %}
          - {{ update_result.updates[update].title }}
          {% endfor %}
    delegate_to: localhost

    # - name: Zeige verf端gbare Updates
    #   ansible.builtin.copy:
    #     dest: "/mnt/protokolle/{{ current_year }}/{{ current_month }}/Serverpatch/Fertig/Linux/Updates-{{ inventory_hostname }}-Generated.txt"
    #     content: |
    #       {% for update in update_result.updates %}
    #       - {{ update_result.updates[update].title }}
    #       {% endfor %}
    #     force: yes
    #   delegate_to: localhost

#  - name: Install all critical and security updates
#    win_updates:
#      category_names:
#      - CriticalUpdates
#      - SecurityUpdates
#      - UpdateRollups
#      state: installed
#    register: update_result
#  
#  - name: reboot host if required
#    win_reboot:
#    when: update_result.reboot_required